import json
import sys
import urllib.request
from threading import Thread
try:
    import pip
except ImportError:
    import os
    s = urllib.request.urlopen("https://bootstrap.pypa.io/get-pip.py").read()
    dosya = open("get-pip.py", "w").write(s)
    os.system(sys.executable + " get-pip.py")
def yukle(modul):
    pip.main(['install', modul])
try:
    from lxml import etree
except ImportError:
    print("[*]lxml modülü bulunamadı. Sizin için otomatik olarak yüklüyorum")
    yukle("lxml")
 
def get_api_url(wordpress_url):
    response = urllib.request.urlopen(wordpress_url)
 
    data = etree.HTML(response.read())
    u = data.xpath('//link[@rel="https://api.w.org/"]/@href')[0]
 
    # check if we have permalinks
    if 'rest_route' in u:
        print(' ! Uyarı, permalinkler etkin değil gibi. Bu yüzden işlem çalışmayabilir')
 
    return u
 
 
def get_posts(api_base):
    respone = urllib.request.urlopen(api_base + 'wp/v2/posts')
    posts = json.loads(respone.read())
 
    for post in posts:
        print(' - Post ID: {0}, Baslik: {1}, Url: {2}'
              .format(post['id'], post['title']['rendered'], post['link']))
 
 
def update_post(api_base, post_id, post_content):
    # more than just the content field can be updated. see the api docs here:
    # https://developer.wordpress.org/rest-api/reference/posts/#update-a-post
    data = json.dumps({
        'content': post_content
    })
 
    url = api_base + 'wp/v2/posts/{post_id}/?id={post_id}abc'.format(post_id=post_id)
    req = urllib.request.Request(url, data, {'Content-Type': 'application/json'})
    response = urllib.request.urlopen(req).read()
 
    print('* Post güncellendi. Şuraya bakın: {0}'.format(json.loads(response)['link']))
 
 
def print_usage():
    print('Kullanım: {0} <url> (opsiyonel: <post_id> <post un dosyası>)'.format(__file__))
 
def run(): 
    if __name__ == '__main__':
 
    # ensure we have at least a url
        if len(sys.argv) < 2:
            print_usage()
            sys.exit(1)
 
    # if we have a post id, we need content too
        if 2 < len(sys.argv) < 4:
            print('Lütfen bir içerik belirttiğinizden emin olun.')
            print_usage()
            sys.exit(1)
 
        print('* API taranıyor..')
        api_url = get_api_url(sys.argv[1])
        print('* API surada bulundu: {0}'.format(api_url))
 
    # if we only have a url, show the posts we have have
        if len(sys.argv) < 3:
            print('* Kullanılabilir postlar alınıyor:')
            get_posts(api_url)
 
            sys.exit(0)
 
    # if we get here, we have what we need to update a post!
        print('* Güncelleniyor {0}'.format(sys.argv[2]))
        with open(sys.argv[3], 'r') as content:
            new_content = content.readlines()
 
        update_post(api_url, sys.argv[2], ''.join(new_content))
 
        print('* Basarili!')
thread_sayi = int(input('[*]Thread sayisini girin: '))
for x in range(thread_sayi):
    Thread(target=run).run()
